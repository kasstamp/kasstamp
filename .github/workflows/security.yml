name: Security & Dependencies

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: write
  checks: write
  issues: write
  pull-requests: write

env:
  NODE_VERSION: '22.x'

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache JS dependencies
        uses: actions/cache@v4
        with:
          path: js/node_modules
          key: ${{ runner.os }}-js-node-modules-${{ hashFiles('js/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-js-node-modules-

      - name: Cache Web dependencies
        uses: actions/cache@v4
        with:
          path: web/node_modules
          key: ${{ runner.os }}-web-node-modules-${{ hashFiles('web/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-web-node-modules-

      - name: Install JS dependencies
        run: |
          cd js
          npm ci

      - name: Install Web dependencies
        run: |
          cd web
          npm ci

      - name: Audit JS packages
        run: |
          cd js
          npm run audit:all

      - name: Audit Web package
        run: |
          cd web
          npm audit --audit-level=moderate


      - name: Create Security Report
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            let report = '# Security & Dependencies Report\n\n';
            report += `**Run Date:** ${new Date().toISOString()}\n`;
            report += `**Commit:** ${context.sha}\n`;
            report += `**Branch:** ${context.ref.replace('refs/heads/', '')}\n\n`;

            report += '## üîí Security Audit\n\n';
            report += 'Security audit completed successfully. Check the workflow logs for detailed results.\n\n';

            report += '## üìã Security Recommendations\n\n';
            report += '- Monitor security advisories for used packages\n';
            report += '- Use `npm audit fix` for automatic security fixes\n';
            report += '- Review dependency licenses for compliance\n';
            report += '- Keep dependencies updated via Dependabot\n\n';

            fs.writeFileSync('security-report.md', report);
            console.log('‚úÖ Security report created successfully');

      - name: Upload Security Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-report-${{ github.run_number }}
          path: security-report.md
          retention-days: 30

      - name: Comment PR with Security Report
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            if (fs.existsSync('security-report.md')) {
              const report = fs.readFileSync('security-report.md', 'utf8');

              const comment =
                report +
                '\n\n---\n*This report was automatically generated by the Security & Dependencies workflow.*';

              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment,
              });
            }


  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          deny-licenses: GPL-2.0, GPL-3.0, AGPL-3.0, LGPL-2.0, LGPL-2.1, LGPL-3.0

  dependabot-check:
    name: Dependabot Security Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check Dependabot Security Status
        uses: actions/github-script@v7
        with:
          script: |
            const isDependabot = context.actor === 'dependabot[bot]';

            if (isDependabot) {
              console.log('‚úÖ Dependabot PR detected');

              const { data: pr } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
              });

              const title = pr.title.toLowerCase();
              const isSecurityUpdate =
                title.includes('security') ||
                title.includes('vulnerability') ||
                title.includes('cve');

              if (isSecurityUpdate) {
                console.log('üîí Security update detected - high priority');

                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  labels: ['security', 'dependencies', 'high-priority'],
                });

                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body:
                    'üîí **Security Update Detected**\n\n' +
                    'This Dependabot PR addresses security vulnerabilities. Please review and merge promptly.\n\n' +
                    '**Priority:** High\n**Type:** Security Update\n**Auto-generated by:** Dependabot\n\n' +
                    'Please test thoroughly before merging.',
                });
              } else {
                console.log('üì¶ Regular dependency update');

                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  labels: ['dependencies'],
                });
              }
            } else {
              console.log('‚ÑπÔ∏è Regular PR - not from Dependabot');
            }
